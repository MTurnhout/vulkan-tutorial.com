name: Build and Release

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4.2.2
      with:
        submodules: recursive
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2
      with:
        vs-version: '17.0'
        msbuild-architecture: x64
    - name: Install Vulkan SDK
      uses: jakoch/install-vulkan-sdk-action@v1.2.5
      with:
        vulkan_version: 1.4.321.0
        cache: true
        stripdown: true
        install_runtime: true
    - name: Generate Visual Studio solution
      run: |
        cmake --preset=release
    - name: Build
      run: |
        cmake --build --preset=release --verbose
    - name: Package Artifacts
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        Compress-Archive -Path ./build/release/bin/* -DestinationPath ./build/VulkanTutorial.zip
      shell: pwsh
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/v')
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: |
          Automated release for ${{ github.ref_name }}
        draft: false
        prerelease: false
    - name: Upload VulkanTutorial Artifact
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/VulkanTutorial.zip
        asset_name: VulkanTutorial.zip
        asset_content_type: application/zip
